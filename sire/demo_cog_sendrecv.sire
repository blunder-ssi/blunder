; Copyright 2023 The Plunder Authors
; Use of this source code is governed by a BSD-style license that can be
; found in the LICENSE file.

#### demo_cog_sendrecv <- demo_cog_stop

;;;; This demo is disabled, since COG_SEND and COG_RECV are no longer
;;;; available.  It might make sense to rewrite this in terms of COG_ASK
;;;; and COG_TELL, or it might make sense to eliminate this, and just
;;;; rely on the existing IPC CI tests.

;/+  boot
;/+  kern
;/+  demo_timer
;/+  stew
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;demoCogChannel=51
;pongCogChannel=28
;
;= (pongCog parent return)
;| trk [%pongwait]
;: ??(pong_got_msg [sender msg]) < syscall (COG_RECV pongCogChannel)
;| trk [%pongrecv msg]
;: ??(pong_sent success) < syscall (COG_SEND parent demoCogChannel msg)
;| trk [%pongsuccess success]
;| pongCog parent return
;
;= (sendDemo return)
;: ??(spin_who me) < syscall COG_WHO
;: ??(spin_got_id cogId) < syscall (COG_SPIN (runCog-(pongCog me)))
;| trk [%cogId cogId]
;;
;^ _ 0 return
;? (go i return)
;| trk [%pingsending cogId i]
;: ??(sent_msg_success success) < syscall (COG_SEND cogId pongCogChannel i)
;: ??(recv_msg [sender msg]) < syscall (COG_RECV demoCogChannel)
;| trk [%pingrecv msg]
;;
;; wait a second to not spam things.
;: ??(td_got_time now) < syscall TIME_WHEN
;| trk [current_time=now]
;: ??(td_waited _) < syscall (**TIME_WAIT (inc now))
;| go (inc i) return
;
;main=(runCog sendDemo)
