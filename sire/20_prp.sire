; Copyright 2023 The Plunder Authors
; Use of this source code is governed by a BSD-style license that can be
; found in the LICENSE file.

### 20_prp <- 19_pat

"""
""" Properties
""" ==========
"""
""" Lookup and set properties on syntax objects.
"""


;;; Imports ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

/+  01_fan
/+  02_bit
/+  03_nat
/+  05_row
/+  04_cmp
/+  05_row
/+  06_rex
/+  07_dat
/+  08_sci
/+  09_chr
/+  10_str
/+  11_set
/+  12_tab
/+  13_exp
/+  14_hax
/+  15_pad
/+  16_bar
/+  17_sug
/+  19_pat


;;; Functions for getting bindings and adding properties ;;;;;;;;;;;;;;;;;;;;;;;

;; TODO support inline annotations in = macro
= (getBind name ss rex err ok)
@ scope | idx 2 ss
@ binds | idx 4 ss
@ bind  | tabGet scope name
@ bRow  | pinItem bind
@ key   | idx 0 bRow
| if (isZero bind)
    | err rex | strWeld "undefined symbol: " name
| if (not key)
    | trk #[=bind]
    | err rex "bindKey is zero!!"
| **ok key bRow

;; TODO support inline annotations in = macro
= (getProps ss@[_ curMod _ modules _curProps] bind)
| if (isNat bind)
    | 'not a binder' bind
@ [bindKey _ _ bindMod bindName] bind
| trk [getProps bindKey bindName bindMod]
| if (eql curMod bindMod)
    @ curProps (idx 4 ss)
    @ bindProps (tabGet curProps bindKey)
    @ bindProps (if (isZero bindProps) #[] bindProps)
    | bindProps
| else
    @ entry      (tabGet modules bindMod)
    @ theirProps (idx 1 | pinItem entry)
    @ bindProps  (tabGet theirProps bindKey)
    @ bindProps  (if (isZero bindProps) #[] bindProps)
    | bindProps

= (addProps ss bind extraProps)
@ [_ curMod _ modules curProps]  | ss
@ [bindKey _ _ bindMod bindName] | bind
| if (eql curMod bindMod)
    @ oldProps (tabGet curProps bindKey)
    @ newProps (tabUnion extraProps oldProps)  ;  left-biased
    @ curProps (tabPut curProps bindKey newProps)
    @ ss       (put ss 4 curProps)
    | ss
| else
    @ [modScope modProps] | pinItem | tabGet modules bindMod
    @ oldProps  (tabGet modProps bindKey)
    @ oldProps  (if (isZero oldProps) #[] oldProps)
    @ newProps  (tabUnion extraProps oldProps)  ;  left-biased
    @ modProps  (tabPut modProps bindKey newProps)
    @ newModule [modScope modProps]
    @ modules   (tabPut modules bindMod | PIN [modScope modProps])
    @ ss        (put ss 3 modules)
    | ss

= (getProp ss bind propName)
@ props (getProps ss bind)
| tabGet props propName


;;; Convenience Macros to Query properties of bindings. ;;;;;;;;;;;;;;;;;;;;;;;;

= ('#getKey' ss rex err ok)
: _ symbol      <- rexParseKids rex [readRex readSymbol] err
: bindKey _bind <- getBind symbol ss rex err
| ok ss (cnsE bindKey)

= (readSymbDotProp rex err ret)
| if (neq '.' rexRune-rex)
  | err rex 'Expected a . rune'
: symbol property <- rexParseKids rex [readSymbol readSymbol] err
| ret [symbol property]

= ('#hasProp' ss rex err expand)
: _ [symbol property]
    < rexParseKids rex [readRex readSymbDotProp] err
: bindKey bind
    < getBind symbol ss rex err
@ props (getProps ss bind)
| trk #[=props =bindKey =bind]
^ expand ss (cnsE _)
| tabHas property props

= ('#getProp' ss rex err expand)
: _ [symbol property] <- rexParseKids rex [readRex readSymbDotProp] err
: bindKey bind        <- getBind symbol ss rex err
^ expand ss (cnsE _)
| tabGet (getProps ss bind) property

= ('#setProp' ss rex err expand)
: _ [symbol property] valSym
    < rexParseKids rex [readRex readSymbDotProp readSymbol] err
;
: _ symBind < getBind symbol ss rex err
: _ valBind < getBind valSym ss rex err
;
^ expand _ ``(#*)
| addProps ss symBind
| tabSing property (idx 1 valBind)

= (getPropsByKey ss key)
@ curProps (idx 4 ss)
| if (tabHas key curProps)
    | tabGet curProps key
| 'todo' 'walk remaining modules and do the lookup in each'

= (getPropByKey ss key property)
@ props (getPropsByKey ss key)
| tabGet props property

why=3
whySrc=(``(why=3))
setProp#(why.src)#whySrc
(1         !!= hasProp#(why.src))
(``(why=3) !!= getProp#(why.src))
why=4
(0 !!= hasProp#(why.src))
(0 !!= getProp#(why.src))


;;; Exports ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

^-^
^-^ {#getKey} {#hasProp} {#getProp} {#setProp}
^-^
^-^ getBind getProps getProp addProps
^-^ getPropsByKey getPropByKey
^-^
